@*@model IEnumerable<Constructora.Models.ParametersModule.CityModel>
    @model PagedList.IPagedList<ConstructoraModel.Model.PARAM_CITY>*@
@model PagedList.IPagedList<Constructora.Models.ParametersModule.PaymentsModel>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" />

@{
    ViewBag.Title = "Listado de Pagos";
}

<h2>Pagos</h2>

@using (Html.BeginForm())
{
    <p>
        Buscar Registro: @Html.TextBox("Search_Data", ViewBag.FilterValue as string)
        <input type="submit" class="btn btn-light" value="Buscar" />
    </p>
}

<p>
    @Html.ActionLink("Crear pago", "Create", new { }, new { @class = "btn btn-primary" })
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.ActionLink("Nombre", "Index", new { Sorting_Order = ViewBag.SortingName })
            </th>
            <th>
                Descripción
            </th>
            <th>
                Fecha
            </th>
            <th>
                Solicitud
            </th>
            <th>
                Acciones
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Request.Customer.Name)
            </td>
            <td>
                @Html.ActionLink("Editar", "Edit", new { id = item.Id }, new { @class = "btn btn-primary" }) |
                @Html.ActionLink("Eliminar", "Delete", new { id = item.Id }, new { @class = "btn btn-danger" })


            </td>
        </tr>
        }
    </tbody>

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, Page_No => Url.Action("Index",
    new { Page_No, Sorting_Order = ViewBag.CurrentSortOrder, Filter_Value = ViewBag.FilterValue }))
